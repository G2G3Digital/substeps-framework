ExecutionConfig

  * The Substeps runner plugin can execute the tests specified by a number of configurations.


  * This can be useful in order to break up test suites into smaller chunks, use different configurations etc.

===

*-------------*----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|    Name     | Type     |                                                                            Description                                                                                                          |
*-------------*----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| description | String   | A descriptive name for the configuration, this is used in the test execution report                                                                                                             |
*-------------*----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| tags        | String   | If the feature or scenario has these tags, then it will be included, otherwise it won’t. multiple tags are space seperated. Tags can be excluded by prefixing with                              |
*-------------*----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| nonFatalTags| String   | If a scenario (and therefore a feature) that has this tag fails to pass, then the build will not fail.  This is useful for scenarios where tests are written and are included in a CI build in advance of completed functionality, this allows the build and therefore maven releases to succeed. Over the course of a project this list should be reduced as confidence in the delivery grows. Format is the same for <tags>                |
*-------------*----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| featureFile | String   | Path to directory of substep files, or a single substep file                                                                                                                                    |
*-------------*----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|subStepsFileName | String | Path to directory of substep files, or a single substep file                                                                                                                                  |
*-------------*----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| strict      | boolean  | Defaults to true, if false, Substeps will use the nonStrictKeywordPrecedence to look for alternate expressions if an exact match can’t be found. Useful for porting Cucumber features.          |
*-------------*----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| fastFailParseErrors | boolean | If true any parse errors will fail the build immediately, rather than attempting to execute as much as possible and fail those tests that can’t be parsed                                |
*-------------*----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| nonStrictKeywordPrecedence | String[] | Required if strict is false. An parameter list of keywords to use if an exact match can’t be found. eg. <param>Given</param> <param>When</param> ... Then if a step was defined in a feature or substep as “When I login”, but implemented as “Given I login”, the feature would parse correctly. |
*-------------*----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| stepImplementationClassNames | String[] | List of classes containing step implementations eg <param>com.technophobia.substeps.StepImplmentations<param>                                                                  |
*-------------*----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| initialisationClass | String[] | Ordered list of classes containing setup and tear down methods eg <param>com.technophobia.substeps.MySetup<param>. By default the initialisation classes associated with the step implementations will be used. |
*-------------*----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+






